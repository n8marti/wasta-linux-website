(function(){const pages=[{"idx":0,"href":"/hugo/home/about-save/","title":"About","content":" Wasta-Linux: About "},{"idx":1,"href":"/hugo/tutorials/advisor/","title":"About","content":" Wasta-Linux: About "},{"idx":2,"href":"/hugo/tutorials/language-worker/","title":"About","content":" Wasta-Linux: About "},{"idx":3,"href":"/hugo/tutorials/technician/","title":"About","content":" Wasta-Linux: About "},{"idx":4,"href":"/hugo/tutorials/virtualbox-install/","title":"About","content":" Wasta-Linux: About "},{"idx":5,"href":"/hugo/tutorials/create-bootable-usb/","title":"Create Bootable USB","content":" How to create a bootable USB from an ISO Image Using Windows For Windows users, the preferred tool to create a bootable USB device from an ISO Image is Rufus. Rufus has the advantage of not needing to be \u0026ldquo;installed\u0026rdquo;: a user can run it directly from the downloaded \u0026ldquo;.exe file\u0026rdquo;.\nTo use Rufus, first insert a 4GB (or greater) USB drive (WARNING! using the Rufus default settings, this USB drive WILL BE COMPLETELY REFORMATTED, so all data WILL BE LOST!).\nThen, start Rufus. It should auto-detect the USB device and look similar to this:\nKeep all the default settings, and click the CD icon (seen in the above screen shot) and navigate to the Wasta-Linux ISO you downloaded. After you select the Wasta-Linux ISO, Rufus should look like this:\nClick \u0026ldquo;Start\u0026rdquo;, and, after completing, your bootable Wasta-Linux USB stick should be ready!\nAfter booting the machine you want to install Wasta-Linux on from the created USB device, if the installer has been set up correctly you should see the following boot menu:\nPlease use the first boot option \u0026ldquo;live - boot the Live System\u0026rdquo; even if you are ready to install. Once the Live System is booted, you can click the icon on the desktop to begin the Wasta-Linux installation.\nUsing Linux For Linux users, in order to make a UEFI and \u0026ldquo;Legacy\u0026rdquo; compatible \u0026ldquo;read only\u0026rdquo; USB installer drive use the \u0026ldquo;Startup Disk Creator\u0026rdquo; from Ubuntu or Wasta-Linux. Alternatively a simple terminal utility named \u0026ldquo;mkusb-nox\u0026rdquo;, which is pre-installed in Wasta-Linux 16.04+, works well.\n"},{"idx":6,"href":"/hugo/home/customizing/","title":"Customizing","content":" Wasta-Linux: Customizing for your Needs Wasta-Linux is intended to be used as a base for regionally-localized Linux \u0026ldquo;customized\u0026rdquo; distributions specific to locations\u0026rsquo; needs (fonts, keyboards, applications, settings, included reference documents, etc.). Should you be interested in being a \u0026ldquo;regional customizer\u0026rdquo; of Wasta-Linux, please use the forums linked at the bottom of this page and someone will contact you.\nThere are 2 primary Wasta-Linux customizing methods, both of which can be used to create custom Wasta-Linux ISOs to re-distribute to users:\n Manual customization Basically, install Wasta-Linux on a clean test system, and make the adjustments you want manually. Then follow the process to create a custom Wasta-Linux ISO. If you make future modifications, you can re-create the ISO. But, any customizations you make in the future that you want to distribute to existing users that installed your previous ISO will need to be individually made on each machine. Due to this limitation, see method 2 below.\n Create a wasta-custom-xyz package The main advantage of creating a wasta-custom-xyz package is that any future adjustments you make to your customizations will be automatically re-distributed to anyone with the wasta-custom-xyz package installed when they update their system. Here is an overview of the process to create and maintain a wasta-custom-xyz package:\n Create a wasta-custom-xyz Package: Work with the Wasta-Linux team to create a new \u0026ldquo;package\u0026rdquo; called wasta-custom-xyz with all your desired customizations included. The Wasta-Linux team will create the first version of this package for you. Once this package is created, installing wasta-custom-xyz on any Wasta-Linux computer will include all of your customizations.\nExamples of customizations that can be included in a wasta-custom-xyz package include:\n LibreOffice Default Settings: Use .doc, .xls extensions, enable complex text layout, set default language settings, etc.\n Additional Keyboards: Install additional language keyboards.\n Additional Fonts: Install additional fonts\n Additional Applications: Install applications on ALL computers with wasta-custom-xyz such as Paratext, AdaptIt, FieldWorks, etc.\n System Default Settings: Customize settings such as the default background image, touchpad behavior, default \u0026ldquo;application favorites\u0026rdquo;, etc.\n Wasta-Menus Default List: Customize the default Applications that are included in Wasta-Menus.\n Reference Documents: Include a folder of reference documents that can optionally be linked to each users Home Directory.\n  Maintain the wasta-custom-xyz Package: Ideally any future modifications to this \u0026lsquo;wasta-custom-xyz\u0026rsquo; package will be made directly by you, the regional customizer. Follow this guide to maintain \u0026lsquo;wasta-custom-xyz\u0026rsquo; custom packages.\n (Optional) Create a Custom Wasta-Linux ISO: As with method 1 above, you can install Wasta-Linux on a clean test system, then install your wasta-custom-xyz package, and then follow the process to create a custom Wasta-Linux ISO.\n   "},{"idx":7,"href":"/hugo/home/download/","title":"Downloads","content":" Wasta-Linux: Downloads 18.04  Wasta-Linux-18.04.3-64Bit  updated: 2019-08-30 md5: f13a4cf5d18e8f40a5cfd0722dc1d814  Notes:\n Based on Ubuntu 18.04 \u0026ldquo;Bionic\u0026rdquo; Interface: Cinnamon is the default interface, with Gnome-Shell also installed Long-Term Support: Security updates provided by Ubuntu through April 2023 UEFI Compatible: Fully Compatible with newer UEFI and Secure Boot features used by Windows 8+ computers Linux Kernel: 5.0 (due to Ubuntu\u0026rsquo;s \u0026ldquo;Hardware Enablement Stack\u0026rdquo;\u0026hellip; the original 18.04 release included Linux Kernel 4.15) Paratext: Paratext 8.0 / 9 Beta supported (Paratext 7.5 not available)   Wasta-Linux 18.04.1 Hardware Compatibility Download ↕  Wasta-Linux 18.04.1 may be needed if you experience any hardware compatibility issues with the 5.0 Linux Kernel included in Wasta-Linux 18.04.3.\nWasta-Linux-18.04.1-64Bit  updated: 2018-09-27 md5: ce7f69957d92f11130732f37771dbac8      16.04  Wasta-Linux-16.04.4-64Bit  updated: 2018-04-04 md5: 5de5238868ceab725e2bbc914b1d471e  Wasta-Linux-16.04.4-32Bit  updated: 2018-04-04 md5: 378bab914f86f208af021146a68c38ea  Notes:\n Based on Ubuntu 16.04 \u0026ldquo;Xenial\u0026rdquo; Interface: Cinnamon is the default interface, with Ubuntu Unity also installed Long-Term Support: Security updates provided by Ubuntu through April 2021 UEFI Compatible: Fully Compatible with newer UEFI and Secure Boot features used by Windows 8+ computers Linux Kernel: 4.13 Paratext: Paratext 7.5 and Paratext 8.0 supported     Wasta-Linux Installation Tips and Tricks:  The above images can be put on a USB flash drive or DVD just like a standard Ubuntu or Linux Mint ISO.\n Follow these instructions if you aren\u0026rsquo;t starting with a Wasta-Linux ISO but rather want to upgrade your existing Ubuntu installation to Wasta-Linux.\n If you are wanting to do an \u0026ldquo;in-place upgrade\u0026rdquo; from a previous version of Wasta-Linux and don\u0026rsquo;t have a separate home partition, you can follow this guide.\n If you are wanting to run Wasta-Linux in VirtualBox, first read these instructions.\n To install Wasta-Linux to a portable, encrypted USB drive without touching the main OS on the computer, you can follow this guide.\n  "},{"idx":8,"href":"/hugo/home/faq/","title":"FAQ","content":" Wasta-Linux: Frequently Asked Questions Below are answers to some of the more common questions you may have about Wasta-Linux. First, a question and response that lays the foundation for Wasta-Linux:\nWhy Linux? One colleague answered the question \u0026ldquo;Why Linux\u0026rdquo; concisely using 3 main points. In brief, Linux is:\n Partner friendly: share with everyone, not only privledged organizations that have corporate license keys Budget friendly: not only does it not have a cost, it will also save support time Customizing friendly: adapt Linux to your use case, rather than having to adapt your usage to the limitations of a locked-down operating system that may not have you in mind as their target user base  Basically it is about freedom (not just \u0026ldquo;free as in no cost\u0026rdquo;), which means freedom to customize for our situation and for our specific users (see more below on this topic), freedom for all to use it, and \u0026ldquo;free from viruses.\u0026rdquo; * For more on these freedoms, please read the \u0026ldquo;case study\u0026rdquo; on our organization\u0026rsquo;s move from Windows to Linux in NE Africa.\n* Yes, eventually there may be Linux viruses, but its design is inherently more secure than Windows which was originally designed for single-user \u0026ldquo;non-networked\u0026rdquo; computers. Over the years Windows has applied security fixes in an \u0026ldquo;ad-hoc fashion\u0026rdquo; to try to account for today\u0026rsquo;s always online environment, but many inherent vulnerabilities remain. For the rest of the questions, click on them to see the response:\n Which Linux desktop and distribution is Wasta-Linux based on? ↕  With Ubuntu being recognized as the market leader in the Linux ecosystem, it was determined that using Ubuntu as a base for Wasta-Linux is the best choice. Using Ubuntu as a base ensures the broadest compatibility with Linux applications for Wasta-Linux.\nHowever, the default interface, called a \u0026lsquo;desktop environment\u0026rsquo; in Linux, used by Ubuntu proved challenging to use as it was not familiar enough for users coming from a Windows environment. After a lot of testing with several different Linux desktops, Cinnamon, created by the Linux Mint team, was chosen as the default interface for Wasta-Linux. For those that aren\u0026rsquo;t interested in adhering to a Windows-style interface, Cinnamon is flexible enough to be able to be reconfigured to match layouts inspired by macOS or Ubuntu\u0026rsquo;s Unity.\n    What customizations are included in Wasta-Linux? ↕  For the curious, here is a summary of some of the most significant modifications made to Wasta-Linux when compared to stock Ubuntu plus the Cinnamon desktop interface:\n \u0026ldquo;SIL ready\u0026rdquo;: The SIL Linux repository is included and standard SIL fonts have been added, so that applications such as Paratext, Bloom, Fieldworks, Adapt It, WeSay and kmfl (Keyman) are ready for installation from the Software Center.\n Several applications added, several others removed. Notable additions include:\n Wasta-Backup: simple \u0026ldquo;version backup\u0026rdquo; utility Wasta-Offline: offline software updates and installs Wasta-Layout: desktop layout settings utility Wasta-Menus: limits the visible applications in the Main Menu Wasta-Resources: centralized distribution of reference and documentation materials Bloom: Literacy materials development for language communities Skype Kdenlive: Non-linear video editing software GoldenDict: Offline (and online using Wikipedia or other sources) Dictionary / Thesaurus Modem Manager GUI: USB 3G modem tool for balance check and top-up commands Pinta: simple to use \u0026ldquo;MS Paint\u0026rdquo; alternative Kiwix: offline simple English version of Wikipedia (due to it\u0026rsquo;s size - 1.6 GB - it is not installed by default in Wasta-Linux) Klavaro: typing tutor some useful command-line utilities such as:  wavemon: a wifi network diagnostic tool traceroute iperf: a network throughput test tool   Centralized update and distribution of \u0026ldquo;future Wasta customizations\u0026rdquo;: No more being \u0026ldquo;stranded\u0026rdquo; as seems to happen with Ubuntu LTS releases.\n      What is the Wasta-Linux background story? ↕  Wasta-Linux development began in 2011-2012 in NE Africa (أهلا وسهلا) where it became apparent that the efforts of a couple IT workers would be better spent testing, evaluating, and customizing Linux to meet the local team\u0026rsquo;s computing needs rather than re-installing and configuring Windows every few months after the latest viruses swept through again. It continues to be used as the primary operating system of our partner organization in that location.\nSince 2014 the main development of Wasta-Linux has continued from Ethiopia (እንኳን ደህና መጣ) and it has become the primary operating system supported by our organization in Ethiopia, with nearly 200 installations and counting.\nRead more about the original motivations for Wasta-Linux in the \u0026ldquo;case study\u0026rdquo; on our organization\u0026rsquo;s move from Windows to Linux.\n    So, what is \u0026#39;wasta\u0026#39; anyway? ↕  \u0026ldquo;Wasta\u0026rdquo; literally means \u0026ldquo;intermediary\u0026rdquo;, but it implies more: it is seen as having \u0026ldquo;insider connections\u0026rdquo;, or \u0026ldquo;special favor or ability to \u0026lsquo;side-step the normal process.\u0026rsquo;\u0026rdquo; Think of needing to wait several days in the heat of a government office to get an official \u0026ldquo;stamp\u0026rdquo; on a piece of paper. If you have wasta, then you are able to come around through the \u0026ldquo;side door\u0026rdquo; and get the stamp immediately. So, Wasta-Linux is essentially \u0026ldquo;cutting to the front of the line\u0026rdquo; for new users to Linux in order to get a usable system without all the effort of starting from nothing. The analogy doesn\u0026rsquo;t work when taken too literally, however: don\u0026rsquo;t think there is anything unethical or illegal in the process! Wasta-Linux is just a light-hearted way to explain that you get the Linux you have been hoping exists without needing to hack on it to get it set up as you want!     How many Wasta-Linux users are there? ↕  Great question! There are several locations using Wasta-Linux around the world, with some locations working in an offline-only environment. This means a single download could represent 10s of users or more. As of 2019, it seems clear that there are at least 500 Wasta-Linux users, but it could be multiples of that number.     How can Wasta-Linux be customized to meet my needs? ↕  Beyond individual users that may find the Wasta-Linux system available here \u0026ldquo;as-is\u0026rdquo; to fit them well in their situations, it is intended that Wasta-Linux can be used as a base for \u0026ldquo;location specific customized versions\u0026rdquo; of Wasta-Linux (providing pre-installed location-specific fonts, keyboards, default applications, settings, reference documents and training materials, etc.). Once these \u0026ldquo;location specific customized Wasta-Linux versions\u0026rdquo; are made available, the ease of install of this customized Linux distribution will provide an opportunity for it to self-propagate throughout the region, even among low-tech computer users.\nIf customizing is of interest to you, please see this page: Wasta-Linux: Customizing for your needs\n   "},{"idx":9,"href":"/hugo/home/customizing/github-setup/","title":"GitHub Setup","content":" Wasta-Linux: GitHub Setup This page is part of the Wasta-Linux customizing process.\nFollow the below steps in order establish your GitHub ID and register a SSH key with GitHub in order to be ready to contribute to the Wasta-Linux custom packages hosted on GitHub.\n Sign up for a GitHub ID https://github.com/\n Create an Open SSH Key  \u0026ldquo;Passwords and Keys\u0026rdquo; app: Select File \u0026gt; New from the menu to create a Secure Shell Key (if you do not already have one: if you already have one you can skip ahead to step 3)\n Give the key a descriptive name, ignore any Advance key options, and click \u0026ldquo;Just Create Key\u0026rdquo;\n DO NOT set a passphrase when prompted, just leave it blank and click \u0026ldquo;OK\u0026rdquo; 2 times.\n You should now see your SSH key in the \u0026ldquo;OpenSSH keys\u0026rdquo; section of the Passwords and Keys application:\n  Add SSH Key to your GitHub account  \u0026ldquo;Passwords and Keys\u0026rdquo; app: Open the SSH key created in step 2 and go to the \u0026ldquo;Details\u0026rdquo; tab, noting the location of the folder. Typically this would be the hidden .ssh folder in your user home.\n Open the id\\_rsa.pub file (the \u0026ldquo;Public Key\u0026rdquo; for your SSH key) in the ssh folder and copy the entire contents of the id_rsa.pub file to your clipboard. The file should look something like this:\n Log into your GitHub account and click on your user name / icon in the top right of any GitHub page, and choose \u0026ldquo;Settings\u0026rdquo;. From the main \u0026ldquo;Settings\u0026rdquo; page you should see a \u0026ldquo;SSH keys\u0026rdquo; tab like this:\n In the \u0026ldquo;SSH keys\u0026rdquo; tab, click \u0026ldquo;Add SSH key\u0026rdquo;, entering a description in the \u0026ldquo;Title\u0026rdquo; field and pasting in the contents of your id_rsa.pub file from the clipboard in the \u0026ldquo;Key\u0026rdquo; field. Click \u0026ldquo;Add key\u0026rdquo;.\n Your \u0026ldquo;SSH keys\u0026rdquo; tab should now list the key:\n  Contact the Wasta-Linux team Please contact us through the Wasta-Linux Users Forum after you have created your GitHub account so we can add your GitHub ID as a GitHub Wasta-Linux organization member.\n  "},{"idx":10,"href":"/hugo/home/","title":"Homes","content":""},{"idx":11,"href":"/hugo/tutorials/inplace-upgrade/","title":"Inplace Upgrade","content":" Inplace Upgrades: Migrating between major versions of Wasta-Linux This guide is for migrating between major versions of Wasta-Linux (eg. from 16.04 to 18.04) when the machine does not have a separate home partition. Even without a separate home partition, this type of upgrade will not remove a user\u0026rsquo;s home directory and all files and settings from this \u0026lsquo;home\u0026rsquo; will be migrated to the new system.\n Backup Make sure important personal files are backed up in case something goes awry.\n Get UIDs Get a listing of the users and UIDs (user IDs) from the existing system. We need it to match with the new installation or security problems will exist after you re-install and you many not be able to login to your new system. Get the list this way:\n Terminal * command:\nsudo grep \u0026quot;/home\u0026quot; /etc/passwd   You will get output something like this:\nsyslog:x:104:109::/home/syslog:/bin/false rik:x:1000:1000:rik,,,:/home/rik:/bin/bash etbadmin:x:1001:1001:etbadmin,,,:/home/etbadmin:/bin/bash test:x:1002:1002:test,,,:/home/test:/bin/bash  So for me that means that user \u0026ldquo;rik\u0026rdquo; is UID 1000, user \u0026ldquo;etbadmin\u0026rdquo; is UID 1001, and user \u0026ldquo;test\u0026rdquo; is UID 1002. This is very important!! When you install, the UID created by the installer is ALWAYS 1000. So I would install using \u0026ldquo;rik\u0026rdquo; so it gets assigned UID 1000. After the install, I would first create user \u0026ldquo;etbadmin\u0026rdquo; so that it will get assigned UID 1001, and then create user \u0026ldquo;test\u0026rdquo; so that it will get assigned UID 1002. If you get this mixed up we can fix it later, but it is easier to do it in the right order so that everything matches.\n Install: Choose \u0026ldquo;Something else\u0026rdquo; Create a USB installer as normal. Proceed as normal using the USB installer, making sure to choose \u0026ldquo;SOMETHING ELSE\u0026rdquo; at the \u0026ldquo;Installation type\u0026rdquo; screen. You have your files backed up, right? :-)\n Select Partition In the \u0026ldquo;Something Else\u0026rdquo; section, you want to choose the main partition and click the \u0026ldquo;Change\u0026rdquo; box:\n Set Partition Properties Then choose \u0026ldquo;ext4\u0026rdquo; for the type, and choose \u0026ldquo;/\u0026rdquo;. Make sure an NOT SELECT to format it (or you will wipe the data). It will warn you that it will NOT replace data in \u0026ldquo;non system folders\u0026rdquo;\u0026hellip;. basically this is telling us your home won\u0026rsquo;t be wiped out so this is very important.\n Continue WITHOUT Formatting Partition Click \u0026ldquo;OK\u0026rdquo; and you will get back to the \u0026ldquo;Something Else\u0026rdquo; list where you will see your partition is now listed as \u0026ldquo;/\u0026rdquo;. Again make sure to NOT CHECK THE BOX next to format. Finally you can click Install Now.\nYou will get the following messages just informing you that it will ONLY delete data from the \u0026lsquo;system folders\u0026rsquo; (meaning your HOME will not be deleted). The second message just indicates that the \u0026ldquo;swap\u0026rdquo; (for \u0026ldquo;virtual RAM\u0026rdquo;) partition will be formatted. Click \u0026ldquo;Continue\u0026rdquo; to both messages.\n Proceed with install as normal Restart and login to the new system after the installation completes.\nNote: You will likely receive a message saying there was an error restoring previously installed applications. This should not prevent your upgraded system from being able to run, so you can just click \u0026ldquo;OK\u0026rdquo; to proceed as normal. After starting your new system, you may need to install any applications that you previously had installed that are not default applications in the newer Wasta-Linux version.\n Run Wasta-Reset Running Wasta-Reset makes sure all the default user settings are applied so the user will have the standard interface experience from the new system.\n Create Additional Users Proceed creating additional users in the correct order (refer to step 2 above to make sure of the correct order: the user created from the installer is assigned UID 1001, the first additional user created will be assigned UID 1001, etc.)\nAgain Wasta-Reset should be run after logging in for the first time to ensure that the user will have the standard user interface experience.\n  "},{"idx":12,"href":"/hugo/tutorials/kiwix/","title":"Kiwix - Wikipedia Offline","content":" Kiwix: Wikipedia Offline Kiwix is a software utility created to use Wikipedia and other large web-based content resources when internet is not available.\nHere is an introduction to Kiwix from their website:\n The world has a connectivity issue In many places internet can be slow, unreliable or even censored. Kiwix is an offline solution that allows you to access educational content like Wikipedia, the Wiktionary, TED talks and many others on any computer or smartphone - without the need for a live internet connection.\nWe bring internet content to people without internet access In schools, universities, prisons, and of course at home. Locally-stored content saves bandwidth and download time. Kiwix is small and efficient, works on low power or old computers. It also runs on a wide range of operating systems, from Android and iOS to Microsoft Windows, macOS and GNU/Linux distributions.\n In order to simplify the installation of Kiwix and the Kiwix simple English version of Wikipedia for offline use, the Wasta-Linux team has packaged them and made them available to users of Debian-based Linux distributions.\nKiwix Installation The legacy version of Kiwix has been made available since the newest version of Kiwix is not yet stable for use in Linux. You can download it here:\n Kiwix-Legacy Download (updated 2019-01-08)\n md5: 11d5869979194c913cfb1a34c0227a4c   Wikipedia (simple English version) Installation for use with Kiwix After Kiwix is installed, you can install any of the content downloaded from Kiwix directly, but then you would need to manually configure it to automatically load and have it generate an index file for easy searching. So if you want the simple English version of Wikipedia, instead download and install the package created by the Wasta-Linux team:\n Kiwix-Wikipedia-Simple-English Download (updated 2018-06-26)\n md5: 1bb283f30fcf1ec28de836aed8bbeff0\n NOTE: Since the simple English version of Wikipedia is around 1.6 GB in size, it is not recommended that it be pre-installed in a Wasta-Linux custom ISO since the maximum size of any such ISO is 4.0 GB total.\n   Kiwix Usage If you have installed the above two items, you should now find Kiwix in your Main Menu, and it should open automatically to the offline copy of the simple English version of Wikipedia. If you scroll down the default page, you should find a browseable category view (hilighted below):\nYou can also select the \u0026ldquo;Bookmarks\u0026rdquo; button (hilighted below in) in order to view, add, and delete bookmarks to pages that you want to keep for quick access. You can save notes on each bookmarked page in the bottom left:\n"},{"idx":13,"href":"/hugo/home/customizing/launchpad-setup/","title":"Launchpad Setup","content":" Launchpad Setup "},{"idx":14,"href":"/hugo/home/customizing/maintain-package/","title":"Maintain a Custom Package","content":" Wasta-Linux: Maintain a Custom Package This page is part of the Wasta-Linux customizing process.\nGit is used for version control of all the Wasta-Linux custom packages. There is a Wasta-Linux organization on GitHub that contains separate GitHub repositories for each Wasta-Linux custom package. Any changes that are pushed up to these repositories are automatically copied every 6 hours to Launchpad, which is Ubuntu\u0026rsquo;s site for managing software. Once the code is in Launchpad, there is another automatic process that builds the actual software packages and places them in the Wasta-Linux Testing Launchpad PPA. Once the \u0026lsquo;Regional Customizer\u0026rsquo; (you!) confirms that the package from the Wasta-Linux Testing PPA is good, any Wasta-Linux Launchpad member can copy it to the main Wasta-Linux Launchpad PPA. This main PPA is already included in every Wasta-Linux system, so once the packages exist in the PPA, all Wasta-Linux users will be able to install them when they update their system.\nSo, as a maintainer of a Wasta-Linux custom package, all you will need to do is get your changes to GitHub, and after that you should find your updated package available for install in the next day when you update your system.\nHere then are the steps for maintaining a Wasta-Linux custom package. I will use the wasta-custom-eth package as an example.\n Setup (only needs to be done the first time)\n GitHub setup You will need to create a GitHub account and register your SSH key with GitHub. Follow the steps in this GitHub setup guide.\n Install dependencies You will need to install some dependencies on your machine in order to have the necessary tools for building packages.\n Terminal * command:\nsudo apt-get install build-essential devscripts dh-make dpkg-dev git   Configure git Git is used for version control so will need to be configured so that any changes you make will correctly be linked to your id.\n Terminal * commands: (execute commands 1 at a time)\ngit config --global user.email \u0026quot;you@example.com\u0026quot; git config --global user.name \u0026quot;Your Name\u0026quot;   Adjust your profile You need to adjust your profile settings so that your name and email will automatically be inserted when building the Wasta-Linux custom packages for local testing\n Terminal * command:\necho 'export DEBFULLNAME=Your\\ Name' \u0026gt;\u0026gt; ~/.profile   NOTE: the \\ delimiter is needed to account for the space in the name (between Your and Name in this example)  Terminal * command:\necho 'export DEBEMAIL=you@example.com' \u0026gt;\u0026gt; ~/.profile   NOTE: the user name and email address should match those used in step \u0026ldquo;1.c\u0026rdquo; above.   You will have to logout / login for these settings to take effect.\n Create a PGP key A PGP key is required to create a \u0026ldquo;local test package\u0026rdquo; of your Wasta-Linux custom package (see section 3 below)\n Open the Menu \u0026gt; Accessories \u0026gt; Passwords and Keys application\n Choose File \u0026gt; New and then choose \u0026ldquo;PGP Key\u0026rdquo;\n Important: do NOT enter a \u0026ldquo;key comment\u0026rdquo;, only enter \u0026ldquo;name\u0026rdquo; and \u0026ldquo;email\u0026rdquo;, or else there will be problems with using it later. The user name and email address should match those used in step \u0026ldquo;1.c\u0026rdquo; above. Setting the key to never expire should be OK. After entering a password, the key will be generated.\n Please wait, eventually the new key will show up under the \u0026ldquo;GnuPG Keys\u0026rdquo; tab, but unfortunately the application does not give much feedback during this key generation process    Create working folder You need a folder on your machine to use for the source code of the Wasta-Linux custom packages. You may create it in the location of your choice, such as your Documents folder. A suggestion is to name the folder wasta-packages, so it would look like this: /home/\u0026lt;username\u0026gt;/Documents/wasta-packages/.\n Clone package  Using the Wasta-Linux GitHub organization page, search for the wasta-custom-xyz GitHub repository that you would like to modify and click the copy to clipboard icon in the SSH clone url: section on the righthand side of the bottom of the page.\n Right click on the wasta-packages folder created in step \u0026ldquo;1.f\u0026rdquo; above and choose \u0026ldquo;Open in Terminal\u0026rdquo;\n Terminal * command:\ngit clone \u0026lt;pasted contents from your clipboard\u0026gt;  Example:\ngit clone git@github.com:wasta-linux/wasta-custom-eth.git   The \u0026ldquo;wasta-custom-eth\u0026rdquo; folder containing the current source code will now exist in your \u0026ldquo;wasta-packages\u0026rdquo; folder.\n  Get current source Right click on the \u0026ldquo;wasta-packages/wasta-custom-eth\u0026rdquo; folder and choose \u0026ldquo;Open in Terminal\u0026rdquo;\n Terminal * command:\ngit pull   Make changes to code Make any changes to the code, then we are ready to update the debian packaging files that are used to build the new version of the package.\n Debian folder references Here is a basic reference to the files in the \u0026ldquo;debian\u0026rdquo; folder, which is necessary to build the package after it finally arrives at Launchpad:\n debian/control: Most important debian file. Defines dependencies and other package details. debian/install: Defines files installed on the system when the package is installed.\nTypically Wasta-Linux custom packages have an \u0026ldquo;install-files\u0026rdquo; folder where all the files installed by a package reside. Confirm in this \u0026ldquo;debian/install\u0026rdquo; file.\nSometimes there is also a package name folder such as \u0026ldquo;wasta-custom-eth\u0026rdquo; in this example, that is installed to \u0026ldquo;/usr/share/wasta-custom-eth\u0026rdquo;. Again, this \u0026ldquo;debian/install\u0026rdquo; file will define these things.\n debian/changelog: Do NOT manually update this file, but instead use dch (see below).\n debian/postinst: Script executed after install of package. This should just call /usr/share/wasta-custom-eth/wasta-custom-eth-postinst.sh (I want this script easily accessible to others for reference: talk to me more if you want more gory details).\n  Update changelog Use dch to create the new version and enter comments regarding what changes you will make\n Terminal * command:\ndch --newversion 0.1.5   Replace 0.1.5 with your new version\n if prompted, choose /bin/nano as the editor, as it is the easiest to use.\n When using nano, the \u0026ldquo;^\u0026rdquo; character is entered using the Ctrl key on your keyboard.  Replace UNRELEASED with your series name\n 16.04: xenial 18.04: bionic  Enter some reasonable comments to document your changes. Reference older changelog entries for examples.\n Enter ^O (again, Ctrl + O) to save your changes.\n Enter ^X (again, Ctrl + X) to exit nano.\n    Build local test version  Terminal * command:\ndebuild -b  Builds a \u0026ldquo;.deb\u0026rdquo; package file for local testing\n You must have a PGP key set up that will sign the packages. Creating the PGP key is above in step \u0026ldquo;1.e\u0026rdquo;\n The resulting .deb will be created \u0026ldquo;up\u0026rdquo; one directory in the wasta-packages folder created in step \u0026ldquo;1.f\u0026rdquo;\n \u0026ldquo;Lintian\u0026rdquo; checks are done looking for any standards violations. Clean up any errors found and re-run until it is clean.\n You can \u0026ldquo;Google\u0026rdquo; the full lintian phrase to see the warning description. The following \u0026ldquo;warnings\u0026rdquo; can be ignored:\n Terminal output:\ndpkg-gencontrol: warning: Depends field of package wasta-custom-eth: unknown substitution variable ${shlibs:Depends}   Use the created .deb to install manually on another local machine for testing to ensure all changes are applied correctly.\n The testing machine must have the same \u0026ldquo;architecture\u0026rdquo; (32 bit or 64 bit) as the machine you created the .deb on.    Commit changes and push Git will now be used to commit the changes and then push them to GitHub.\n Clean up Important: first clean up from the debuild -b process!\nThe debuild -b process from step 4 above creates some temporary build files that we don\u0026rsquo;t want to keep. Clean them up! This is important or else the next step to add files to git will add these temporary files, which we don\u0026rsquo;t want.\n Terminal * command:\ndebclean   Add new files If you have added any new files to the folder, you will need to \u0026lsquo;add\u0026rsquo; them to git so they are under version control.\n This is why it is important to run debclean first so that the temporary debian files won\u0026rsquo;t be added to version control! Terminal * command:\ngit add --all  All files in the wasta-custom-xyz folder not already part of git version control will be added to it\n  Confirm git status (can be done at any time)\n Terminal * command:\ngit status   Commit changes Until your changes are \u0026ldquo;committed\u0026rdquo; they are not updated in git.\n Terminal * command:\ngit commit -am \u0026quot;\u0026lt;short commit message\u0026gt;\u0026quot;   Example:\ngit commit -am \u0026quot;Adding LibreOffice Extension\u0026quot;    Push changes Pushing changes will transfer the git commits / updates to GitHub.\n Terminal * command:\ngit push    Launchpad package creation Launchpad will auto-build the package from GitHub as described below.\n Monitor Launchpad test build  Wasta-Linux Team Launchpad site\n Under \u0026ldquo;Related Projects\u0026rdquo; in the bottom right there should be a link to each Wasta-Linux custom package project  Launchpad will automatically import source code from Github every 6 hours.\n Launchpad will automatically build new packages every 24 hours in the Wasta-Linux Testing PPA.\n Please contact the Wasta-Linux team if you need either of these processes expedited   Test package Before distributing the new package to all Wasta-Linux users, it is advisable to test install the package first, only submitting to other users after it is confirmed to be error free.\n Add Wasta Testing PPA Ensure you have the Wasta-Linux Testing PPA added to your system\n Terminal * command:\nsudo add-apt-repository ppa:wasta-linux/wasta-testing   Update your package lists  Terminal * command:\nsudo apt-get update   Install test package  Terminal * command:\nsudo apt-get install wasta-custom-xyz    Copy package to main PPA After confirming the package in the Wasta-Testing PPA is ready to be distributed to other users, it must be copied to the main Wasta-Linux PPA. Any Wasta-Linux Launchpad member can copy packages between PPAs.\n Follow this guide to become a Wasta-Linux Launchpad member.  The package is now available to all Wasta-Linux users.\n   * To open the Terminal, in Wasta-Linux go to Menu \u0026gt; Administration \u0026gt; Terminal, or press the following keys at the same time: Ctrl + Alt + T\n"},{"idx":15,"href":"/hugo/tutorials/usb-install/","title":"Portable USB Installation","content":" Wasta-Linux: Installing to an Encrypted USB Drive It may be desirable to install Wasta-Linux to an encrypted USB drive for security or portability. Following this guide you will need 2 USB drives, one with a standard Wasta-Linux \u0026ldquo;live installer\u0026rdquo; ISO and a second USB drive (preferably a 32+ GB high quality USB3 drive) that will be your target encrypted USB Wasta-Linux system.\n Machine Setup In order to ensure the USB drive will be UEFI/Secure Boot compatible, make sure the machine is in \u0026ldquo;Secure Boot / UEFI mode.\u0026rdquo;\n Remove internal HDD It is recommended to remove the internal HDD so that when building the USB system it will not be aware of the internal HDD OS. Then when booting from the USB system it will not stop at a \u0026ldquo;GRUB\u0026rdquo; prompt. Removing the internal HDD also ensures you will not risk installing incorrectly and damaging your internal HDD\u0026rsquo;s OS.\n Boot the Wasta-Linux \u0026ldquo;USB live installer\u0026rdquo; Do not have your \u0026ldquo;target USB drive\u0026rdquo; inserted into the machine at this point. Boot the \u0026ldquo;Live Installer\u0026rdquo; as normal.\n Insert \u0026ldquo;target USB drive\u0026rdquo;, Start Installer When coming to the \u0026ldquo;Installation type\u0026rdquo; screen, choose \u0026ldquo;Erase Disk and install Wasta-Linux.\u0026rdquo; Also ticked the box next to \u0026ldquo;Encrypt the new Wasta Linux installation for security\u0026rdquo; (which then by default selects the LVM tick box as well). See screenshot below:\n Setup Encryption Security Key Enter an encryption key and optionally chose to overwrite empty disk space for additional security. See screenshot below:\n Complete Installation Continue with the installation until finished. FYI the final partitioning on my test target USB is as follows in gparted:\n /dev/sda1: 512MB fat32 \u0026lt;boot, esp flags\u0026gt;\n mount point: /boot/efi\n /dev/sda2: 732MB ext4\n mount point: /boot\n /dev/sda3: 27.42GB [Encrypted] lvm2 pv\n mount point: live-vg (when unencrypted it is \u0026ldquo;/\u0026rdquo;)\n  See screenshot below:\n Test target USB system Shutdown and unplug the \u0026ldquo;Live System USB\u0026rdquo;. Then re-insert the original HDD, and, ensuring the \u0026ldquo;target USB system\u0026rdquo; is connected, start the computer. Press the required key to bring up the \u0026ldquo;Boot Manager\u0026rdquo;, and select the USB drive. The target USB system should boot, prompting for the disk encryption key before unencrypting the drive. This \u0026ldquo;target USB system\u0026rdquo; should be able to boot on machines using UEFI / Secure Boot and on machines using \u0026ldquo;Legacy Boot\u0026rdquo;. There may be a message that flashes by when booting indicating something about \u0026ldquo;Boot Order\u0026rdquo; but it can be ignored.\n Inserting target USB system when running a different OS Inserting the USB into another computer already running Linux will prompt for the encryption key before mounting the USB drive. A machine running Windows will not be able to prompt for the encryption key and will not be able to mount the USB drive. So overall this seems like a quite secure system that is not known to the host machine. See screenshot below to see the prompt that comes up when inserting the USB drive into an already-running Linux system:\n  "},{"idx":16,"href":"/hugo/tutorials/tutorial-guidelines/","title":"Tutorial Guidelines","content":" Guidelines for Creating Wasta-Linux Tutorials Screenshots Shutter is the application recommended for creating screenshots to use in Wasta-Linux Tutorials. As with most screenshot utilities, you have the ability to screenshot your entire desktop, a specific application window, or a selected area of your desktop.\n Shutter Main Window Hilighted above are the basic options for taking screenshots using the Shutter Main Window:\n 1. Selection: take screenshot of selected area of your desktop\n2. Desktop: take screenshot of your entire desktop\n3. Window: take screenshot of selected window\n4. Include Cursor: Include or exclude cursor in screenshot\n5. Delay: select the delay time before taking a screenshot (helpful if you want to choose a specific menu item for the screenshot)\n6. Section of window / Tooltip: Shutter even has the ability to screenshot tooltips and menus, which many screenshot utilties aren\u0026rsquo;t able to do as easily\n7. Edit: Shutter includes an integrated graphic editor (see below)\n  Shutter Edit Window Additionally, Shutter provides the ability to do light editing of screenshot images. Hilighted above are the main features of the Shutter Edit Window:\n 1. Arrow: Insert an arrow\n2. Box: Insert a box\n3. Text: Insert text\n4. Auto-Increment: insert sequential numbers (as in the screenshot)\n5. Crop: Crop the image\n You can control the color of the outline as well as the fill color of objects. Note that by default there is a 0,0,255 with a 59 transparency for boxes. This gives a light blue transparent box that will help to hilight the area. For writing text on top of dark images, it is first recommended to place a box on the image with a solid white background (255,255,255, transparency 255) before placing the text.\n Shutter Plugins One additional great feature of Shutter is the integrated plugins. You can experiment with these, but I will hilight one of plugin that is recommended for Wasta-Linux screenshots, the \u0026ldquo;Hard Shadow\u0026rdquo; plugin.\nFirst, right-click on your image and choose \u0026ldquo;Run a Plugin\u0026hellip;.\u0026rdquo;:\nThen, choose \u0026ldquo;Hard Shadow\u0026rdquo; from the plugin list and click \u0026ldquo;Run\u0026rdquo;:\nKeep the default settings in the Hard Shadow Window and click OK:\nThe shadow is now applied and you are taken back to the Shutter Main Window:\nYou will now be able to notice the \u0026ldquo;checkered box\u0026rdquo; around the outside of the image which indicates the shadow has been applied to a transparent background. When pasting this image into a document, the checkers will not appear, but the shadow will blend into the background of the document:\n  "},{"idx":17,"href":"/hugo/tutorials/","title":"Tutorials","content":""},{"idx":18,"href":"/hugo/tutorials/","title":"Tutorials","content":" Wasta-Linux Tutorials Installation / Upgrade  Creating a bootable Wasta-Linux USB drive In-Place Upgrades: Re-installing / Upgrading Wasta-Linux for users without a separate /home partition Installing Wasta-Linux to an encrypted USB drive  Miscellaneous  Download and install Kiwix and the simple English version of Wikipedia for offline use Guide for Creating Screenshots to use with Wasta-Linux Tutorials  Additional Tutorials Several locations are beginning to create Wasta-Linux tutorials that are beneficial to all Wasta-Linux users.\nSIL Mexico has put together a great site with many Wasta-Linux guides and tutorials.\nSIL PNG has developed excellent tutorials that are tailored toward 3 different audiences:\n The Language Worker The Consultant/Advisor The Technician  \u0026nbsp;\n\u0026nbsp;\n\u0026nbsp;\n\u0026nbsp;\n\u0026nbsp;\n"},{"idx":19,"href":"/hugo/home/ubuntu-migration/","title":"Ubuntu Migration","content":" How to turn Ubuntu into Wasta-Linux To take an existing Ubuntu 18.04 system and change it into Wasta-Linux 18.04, from a Terminal * perform the following steps:\n NOTE: Wasta-Linux only targets Ubuntu LTS (Long Term Support) releases, such as 18.04, 16.04, etc. Interim short-term Ubuntu releases such as 19.10, 19.04, etc. are not supported.   Get the Wasta-Linux core package installed: The following Terminal * commands (perform them one at a time) are needed to install the all-essential wasta-core-bionic package, which is the foundation for Wasta-Linux:\nsudo add-apt-repository ppa:wasta-linux/wasta sudo apt-get update sudo apt-get install wasta-core-bionic sudo apt-get update   NOTE: the second \u0026ldquo;apt-get update\u0026rdquo; is needed since wasta-core-bionic adds additional repositories to your computer, such as packages.sil.org and the wasta-apps ppa. You then need this second apt-get update to make the packages from those repositories available for installation.\n NOTE: you may want to restart your system at this point\n  Install Cinnamon: (recommended but optional)\nYou do not have to install the Cinnamon desktop interface and can continue using Ubuntu\u0026rsquo;s Unity desktop instead, but most Wasta-Linux tutorials and development focus revolve around the Cinnamon interface. Also note that even if you do install Cinnamon, the Ubuntu Unity desktop interface will not be removed, so you can continue using it or Cinnamon, whichever you prefer.\nThe following Terminal * commands (perform them one at a time) will install Cinnamon and set it as the default desktop interface:\nsudo add-apt-repository ppa:wasta-linux/cinnamon-4-2 sudo apt-get update sudo apt-get install wasta-cinnamon-bionic   NOTE: If you are prompted to choose a \u0026lsquo;login manager\u0026rsquo;, please select lightdm.\n NOTE: If your system still logs into Ubuntu\u0026rsquo;s default Gnome-Shell you can click the icon in the upper right of the user login box from the login screen and choose \u0026ldquo;Cinnamon\u0026rdquo;.\n  Run the relevant Wasta-Linux setup script: (recommended but optional)\n Option 1: Run the wasta-system-upgrade Terminal * command:\nsudo wasta-system-upgrade  This will perform the following steps:\n Install all software updates Install all default Wasta-Linux apps  Option 2: Run the wasta-initial-setup Terminal * command:\nsudo wasta-initial-setup  In addition to the steps executed by the wasta-system-upgrade script, this script will perform these additional steps:\n Remove unwanted apps You will be prompted so you can answer No to the question if you don\u0026rsquo;t want to remove the unwanted apps\n Install the Ubuntu \u0026ldquo;Hardware Enablement\u0026rdquo; stack This will upgrade the Linux Kernel and the x-server display server to the \u0026ldquo;Hardware Enablement\u0026rdquo; verisons distributed by Ubuntu, which is recommended for newer hardware.\n  NOTE: For either of the above 2 commands if you want to run the full process \u0026ldquo;non-interactively\u0026rdquo;, so that the app removals and other bits are done without prompting you, please append the auto parameter like this: sudo wasta-system-upgrade auto\n NOTE: You will definitely want to restart your system after this process has finished.\n  Congratulations, you are now running Wasta-Linux!  * To open the Terminal, in Wasta-Linux go to Menu \u0026gt; Administration \u0026gt; Terminal, or press the following keys at the same time: Ctrl + Alt + T\n"},{"idx":20,"href":"/hugo/wasta-apps/","title":"Wasta Applications","content":" Wasta Applications These applications have been created specifically with Wasta-Linux users in mind, and are pre-installed in Wasta-Linux:\n Wasta-Backup: simple \u0026ldquo;version backup\u0026rdquo; utility\n Wasta-Offline: offline software updates and installs\n Wasta-Layout: desktop layout settings utility\n Wasta-Menus: limits the visible applications in the Main Menu\n Wasta-Resources: centralized distribution of reference and documentation materials\n  \u0026nbsp;\n\u0026nbsp;\n\u0026nbsp;\n\u0026nbsp;\n\u0026nbsp;\n"},{"idx":21,"href":"/hugo/wasta-apps/","title":"Wasta-apps","content":""},{"idx":22,"href":"/hugo/wasta-apps/wasta-backup/","title":"Wasta-Backup","content":" Wasta-Backup: Simple Version-Backup Program What is it? Wasta-Backup is a simple Linux backup program for version-backups of data to an external USB device. In other words, it is an easy way to back up important files, and it keeps older versions of the files in case they are needed again.\nIf you want to know more, Wasta-Backup is a simple graphical interface for rdiff-backup, which is a solid, reputable, and reliable command-line-only backup program.\nHow does it work? Here is a screenshot of Wasta-Backup:\nIf you insert a USB device and start Wasta-Backup, the device will automatically be found and you just need to click \u0026ldquo;Backup\u0026rdquo; to begin.\nWhen a USB device with a \u0026lsquo;wasta-backup\u0026rsquo; folder on it (presumably from a previous backup) is inserted, Wasta-Backup will auto-launch.\nWhat gets backed up, exactly? Here is a list of the default folders that are backed up with Wasta-Backup (within a user\u0026rsquo;s home folder):\n Adapt It (~/Adapt It Unicode Work) Bloom (~/Bloom) Fieldworks (~/.local/share/fieldworks/Projects) Paratext (~/ParatextProjects) Paratext8 (~/Paratext8Projects) Thunderbird (~/.thunderbird) WeSay (~/WeSay) User Documents (~/Documents) User Desktop Files (~/Desktop)  By default, Wasta-Backup will only backup important files within the Documents and Desktop folders (files with other extensions like movies and pictures will not be backed up). This is done to make sure the USB backup device is not filled up too quickly. To back up all files within those folders, you can use the Wasta-Backup menu to uncheck \u0026ldquo;File | Advanced | Backup File Selection | Only Backup Important Files\u0026rdquo;.\nWhat if I want to customize what gets backed up? Wasta-Backup can be customized to meet almost anyone\u0026rsquo;s backup needs.\n To Customize Backup Folders: The list of folders that get backed up can be customized by editing this file in a user\u0026rsquo;s home folder: ~/.config/wasta-backup/backupDirs.txt\n To Customize Backup File Types: The list of default file types that get backed up can be customized by editing this file in a user\u0026rsquo;s home folder: ~/.config/wasta-backup/backupInclude.txt\n  What can I restore? Wasta-Backup can restore:\n A previous version of a file or folder (the current item is first renamed using the current date and time) A deleted file or folder All current files and folders (such as when you are moving files from an old computer to a new computer)  How do I install Wasta-Backup? Wasta-Backup is pre-installed in Wasta-Linux. For other Ubuntu-based Linux distributions (Ubuntu, Linux Mint, etc), the easiest way to install Wasta-Backup is to use a Terminal *. Copy each of these three commands and enter them in the Terminal (one at a time; you will need to provide an administrative password):\nsudo add-apt-repository ppa:wasta-linux/wasta-apps sudo apt-get update sudo apt-get install wasta-backup  * To open the Terminal, in Wasta-Linux go to Menu \u0026gt; Administration \u0026gt; Terminal, or press the following keys at the same time: Ctrl + Alt + T\n"},{"idx":23,"href":"/hugo/wasta-apps/wasta-layout/","title":"Wasta-Layout","content":" Wasta-Layout: Cinnamon Desktop Layout Settings Utility What is it? Wasta-Layout is a simple utility for changing the layout of the panel (taskbar) and other items of the desktop interface in Cinnamon (the default desktop interface of Wasta-Linux). Different preset layout configurations have been added to Wasta-Layout to provide different user experiences for Cinnamon.\nHow do I use it? Here is a screenshot of the Wasta-Layout dialog:\nSimply select the desired layout and click OK. A prompt will then ask if the selected layout should be set as the \u0026ldquo;System Default\u0026rdquo; which means any newly created users will be created using this layout. To not annoy other existing users on the system, Wasta-Layout will not change their existing desktop layouts.\nBelow are descriptions and screenshots of the various Wasta-Layout desktop layouts:\nDefault The \u0026lsquo;default\u0026rsquo; layout option of Wasta-Layout largely matches the defaults directly from the Cinnamon development team.\nNotable items include: - The bottom panel and Main Menu are similar to Windows XP - Application windows are not grouped\nRedmond7 The \u0026lsquo;redmond7\u0026rsquo; layout is meant to match Windows 7\u0026rsquo;s interface more closely than the Cinnamon default layout.\nNotable differences compared to the \u0026lsquo;default\u0026rsquo; layout include: - Application windows are grouped together, with a number in the top left of showing the number of running windows for each application. - The bottom panel is slightly taller in order to give larger panel icons\nCupertino The \u0026lsquo;cupertino\u0026rsquo; layout is meant to loosely match Apple\u0026rsquo;s macOS / OSX interface.\nNotable differences compared to the \u0026lsquo;default\u0026rsquo; layout include: - The panel is placed at the top - A \u0026lsquo;dock\u0026rsquo; is placed at the bottom: it will hide automatically when windows are placed over it. Dock items can \u0026lsquo;zoom\u0026rsquo; when hovering over them - The panel is semi-transparent (but becomes non-transparent when a window is placed next to it)\nNotable shortcomings compared to Apple\u0026rsquo;s macOS / OSX interface: - There is no \u0026lsquo;Global AppMenu\u0026rsquo; (application menus will show in the application\u0026rsquo;s own window rather than in the main system panel)\nUnity The \u0026lsquo;unity\u0026rsquo; layout is inspired by Ubuntu\u0026rsquo;s Unity interface, which was Ubuntu\u0026rsquo;s default from 2011 through 2017.\nNotable differences compared to the \u0026lsquo;default\u0026rsquo; layout include: - The panel is placed at the top - A non-hiding \u0026lsquo;dock\u0026rsquo; is placed on the left side. - The Main Menu is the top item in the dock, and has the shutdown menu and favorites removed. - The shutdown menu is in the top right. - The panel and dock are semi-transparent (but become non-transparent when a window is placed next to them)\nNotable shortcomings compared to Ubuntu Unity\u0026rsquo;s interface: - There is no \u0026lsquo;Global AppMenu\u0026rsquo; (application menus will show in the application window rather than in the main system panel) - There is no \u0026lsquo;HUD\u0026rsquo; (\u0026ldquo;heads up display\u0026rdquo;): this is the ability in Unity to quickly find application menu items by pressing ALT then typing to search for the desired setting. The global menu is required for this functionality, and at this time there is no easy way to add a global menu to Cinnamon. - The end result is that the panel in the Wasta-Layout Unity interface is largely unused (except for the right side). So unfortunately this means that vertical space is not as efficiently used as under Unity.\nWidescreen The \u0026lsquo;widescreen\u0026rsquo; layout seeks to maximize vertical space for today\u0026rsquo;s widescreen displays.\nNotable differences compared to the \u0026lsquo;default\u0026rsquo; layout include: - The panel is placed on the left side, with no bottom panel - Application windows are grouped together, with a number in the top left of showing the number of running windows for each application - Some of the \u0026lsquo;system tray icons\u0026rsquo; in the bottom left of the panel can be be collapsed to reduce the space they take up in the panel - The panel is semi-transparent (but becomes non-transparent when a window is placed next to it)\nWidescreen layout with the system tray collapsed:\n Widescreen layout with the system tray expanded:\n  "},{"idx":24,"href":"/hugo/","title":"Wasta-Linux - Home","content":" Wasta-Linux: Welcome to Computing Freedom! Wasta-Linux is a computer operating system perfect for anyone wanting a virus-resistant system that is not only free to share with anyone but also provides freedom of flexibility and customization.\nRegardless of what platform you\u0026rsquo;re coming from, Wasta-Linux has an intuitive interface that is made to look familiar. The default desktop looks and feels a lot like Microsoft Windows, while Wasta-Layout allows users to select interfaces inspired by macOS or Ubuntu Unity.\nWasta-Linux is ready \u0026ldquo;out of the box\u0026rdquo; for all your computing needs. Feel free to explore more about Wasta-Linux through the menu on the left or:\n Find more detail about Wasta-Linux on the Frequently Asked Questions page. Go directly to Download if you are ready to get your copy of Wasta-Linux to install. Wanting to customize to make your own version of Wasta-Linux for your users? Check the Customizing page. Why Linux is a good place to understand some of the background motivation for using Linux in a multi-national non-profit organization.  "},{"idx":25,"href":"/hugo/wasta-apps/wasta-menus/","title":"Wasta-Menus","content":" Wasta-Menus: Main Menu Application Limiting Feature What is it? Wasta-Menus is a simple way to only display a limited number of pplications in the system\u0026rsquo;s Main Menu for the current user.\nWith Wasta-Menus enabled, a Wasta-Linux computer could serve as a kiosk omputer or it could be used by beginning users who only have only been ssigned a few specific tasks on the computer. In both cases it is referable to not overwhelm the user with ALL the installed Wasta-Linux pplications in the Main Menu, but rather present a limited set of them o the user.\nHow do I use it? There are 2 applications needed to use Wasta-Menus, both described elow. Both applications require an administrative password to keep urious users from being able to make modifications.\n Wasta-Menus Use this application to enable, disable, or fully remove the current user\u0026rsquo;s Wasta-Menus. Here is a screenshot:  Simply click \u0026ldquo;On\u0026rdquo; and then click \u0026ldquo;OK\u0026rdquo; to enable a user\u0026rsquo;s Wasta-Menus. Then click on the Main Menu and you will see that only a limited number of applications are displayed. The default list of applications in Wasta-Menus can be adjusted by a regional customizer of Wasta-Linux.\n In order to reset the current user\u0026rsquo;s Wasta-Menus, first remove them and then use Wasta-Menus again to enable them.\n  Wasta-Menus Apps Use this application to add apps to or remove apps from the current user\u0026rsquo;s Wasta-Menus so that it will show in the Main Menu. Here is a screenshot:  Simply select the applications you would like to appear in the Main Menu or deselect the ones you would like to hide and click \u0026ldquo;OK\u0026rdquo;. The applications selected should now match those found in the current user\u0026rsquo;s Main Menu.   "},{"idx":26,"href":"/hugo/wasta-apps/wasta-offline/","title":"Wasta-Offline","content":" Wasta-Offline: Offline Software Updates and Installs What is it? Wasta-Offline is a simple utility for updating or installing software packages on a Linux machine from a local \u0026lsquo;wasta-offline\u0026rsquo; folder, resulting in saving many hundreds of MB or even a few GB of internet downloads. Typically this is useful in areas with poor, expensive, or non-existent internet, but it is indeed quite handy for everyone without a central update caching server that has to support multiple Linux machines. It was written because aptoncd, apt-cache, and other offline tools didn\u0026rsquo;t fit our need and mostly seem to be abandoned.\nHow do I use it? Step One: Set up from a \u0026lsquo;Source Machine\u0026rsquo; The first step in using Wasta-Offline is to populate the \u0026lsquo;wasta-offline\u0026rsquo; folder from a \u0026lsquo;source machine\u0026rsquo; for use on other \u0026lsquo;destination machines\u0026rsquo;. This can be done using 2 different methods (they can both be used in tandem if desired):\n Wasta-Offline-Setup: The Wasta-Offline-Setup utility can be used to copy the existing local cached packages from the \u0026lsquo;source machine\u0026rsquo; to a \u0026lsquo;wasta-offline\u0026rsquo; folder, typically located on a USB drive. Here is a screenshot of Wasta-Offline-Setup:  Specifically, Wasta-Offline-Setup will copy the packages to a wasta-offline/local-cache folder. Wasta-Offline-Setup will keep separate caches for 32-bit and 64-bit architectures, so if you want to use Wasta-Offline for destination machines of both architectures you will need to run Wasta-Offline-Setup from multiple source machines (one 32-bit source machine and one 64-bit source machine).\n Subsequent runs of Wasta-Offline-Setup will add to the wasta-offline/local-cache repository, so you can continue to build the local cache repository as you come into contact with machines that have packages already installed that you want to make available to other destination machines via Wasta-Offline. As a note, eventually, your wasta-offline/local-cache folder may need manual \u0026lsquo;cleaning out\u0026rsquo; if you start to run out of space on the device holding the \u0026lsquo;wasta-offline\u0026rsquo; folder, as duplicate outdated versions of packages get copied to it (multiple versions of Firefox, LibreOffice, etc., for example).\n  apt-mirror: If your destination machines have no internet, and/or the location of the source machine you will use to populate the \u0026lsquo;wasta-offline\u0026rsquo; folder has good internet, you may want to use apt-mirror to populate the \u0026lsquo;wasta-offline\u0026rsquo; folder for use on destination machines.\n Using apt-mirror, you will create FULL copies of the specified internet repositories, so all packages in these repositories will be available to destination machines via Wasta-Offline, as of the date of the most recent apt-mirror run, regardless of whether or not they have been installed on the source machine. An apt-mirror \u0026lsquo;base path\u0026rsquo; of wasta-offline/apt-mirror should be used in order for destination machines running Wasta-Offline to be able to use these apt-mirror repositories.\n Apt-mirror has no gui, so you will need to set up a simple configuration file for it and run it from the terminal. As a note, setting up apt-mirror repositories like this will require many GB of downloads from the internet on the initial apt-mirror run. Later runs can be done to update the apt-mirror repositories, only downloading changes in the available packages in the repositories since the previous apt-mirror run.\n   How do I use it? Step Two: Use on a \u0026lsquo;Destination Machine\u0026rsquo; See this screenshot of running Wasta-Offline on a destination machine:\nThe first thing to note is that Wasta-Offline has the option to run in 2 different \u0026ldquo;modes\u0026rdquo;, explained in detail here:\n Offline Only (Default Mode): In this mode, a computer\u0026rsquo;s \u0026ldquo;apt sources\u0026rdquo; (listing of available software repositories) is replaced with the repositories found in the \u0026lsquo;wasta-offline\u0026rsquo; folder (again this can be both the wasta-offline/local-cache repository generated from Wasta-Offline-Setup and any number of wasta-offline/apt-mirror repositories generated by apt-mirror). This means that the only available packages for installs or updates while running Wasta-Offline will be from the \u0026lsquo;wasta-offline\u0026rsquo; folder. If a desired package or dependency is not found in the \u0026lsquo;wasta-offline\u0026rsquo; folder, it will not be able to be installed.\n Offline And Internet (\u0026lsquo;Hybrid\u0026rsquo; Mode): In this mode, the repositories found in the \u0026lsquo;wasta-offline\u0026rsquo; folder are inserted at the beginning of the computer\u0026rsquo;s \u0026lsquo;apt sources\u0026rsquo; (listing of available software repositories). This means that software packages from the \u0026lsquo;wasta-offline\u0026rsquo; folder will be preferred over identical internet versions, but if software packages are installed or updated that do not exist in the \u0026lsquo;wasta-offline\u0026rsquo; folder, they will be downloaded from the internet (after finishing using Wasta-Offline the user may then want to run Wasta-Offline-Setup on this machine in order to add the downloaded packages to the \u0026lsquo;wasta-offline\u0026rsquo; folder for subsequent use on other destination machines).\n  Once selecting the mode that Wasta-Offline will run in, the necessary system adjustments are made and the following window is displayed:\nThis window needs to stay open while other software utilities are used (such as Synaptic Package Manager) to perform the actual software package updates or installs. Note that due to some unfortunate shortcomings, Software Center is not able to be used in the default \u0026lsquo;Offline Only Mode\u0026rsquo;, as it requires an internet connection to install software.\nFor terminal users, once Wasta-Offline is \u0026ldquo;Ready\u0026rdquo; you can use this command to update your system:\nsudo apt-get dist-upgrade  Once all software package updates and installs have been performed, clicking the \u0026lsquo;Finished\u0026rsquo; button will close Wasta-Offline and all \u0026lsquo;apt sources\u0026rsquo; (listing of available software repositories) will be returned to their prior states.\nCongratulations, you just saved lots of time and possibly lots of money getting your Linux system updated!\nHow do I install it? For Wasta-Linux users, Wasta-Offline will automatically be installed when you update your system. However, for \u0026lsquo;source machines\u0026rsquo; that will set up the \u0026lsquo;wasta-offline\u0026rsquo; folder with cached software packages, you will need to install \u0026lsquo;wasta-offline-setup\u0026rsquo; using Synaptic Package Manager or Ubuntu Software Center.\nFor other Ubuntu-based Linux distributions (Ubuntu, Linux Mint, Elementary OS, etc), the easiest way to install Wasta-Offline and Wasta-Offline-Setup (for source machines) is to use a Terminal *. Copy each of these three commands and enter them in the Terminal (one at a time; you will need to provide an administrative password):\nsudo add-apt-repository ppa:wasta-linux/wasta-apps sudo apt-get update sudo apt-get install wasta-offline wasta-offline-setup  If you want to install Wasta-Offline on destination computers without internet access, it should be possible to manually install the wasta-offline_\u0026lt;version-number\u0026gt;.deb from the wasta-offline/local-cache/... folder. The \u0026lsquo;dependencies\u0026rsquo; are kept to a minimum for Wasta-Offline to allow this use case.\nAs a practical usage example, the individual setting up the \u0026lsquo;wasta-offline\u0026rsquo; folder on the source machine could copy these wasta-offline_\u0026lt;version-number\u0026gt;.deb installers to the root of the USB device used to deliver the \u0026lsquo;wasta-offline\u0026rsquo; folder, so that destination machine users will find it easily in order to install, after which these users can launch Wasta-Offline to perform the rest of the software package updates or installs.\n* To open the Terminal, in Wasta-Linux go to Menu \u0026gt; Administration \u0026gt; Terminal, or press the following keys at the same time: Ctrl + Alt + T\n"},{"idx":27,"href":"/hugo/home/customizing/wasta-remastersys/","title":"Wasta-Remastersys","content":" Wasta-Remastersys This page is part of the Wasta-Linux customizing process.\nThe Wasta-Linux ISOs are created using Wasta-Remastersys. Wasta-Remastersys is also pre-installed in Wasta-Linux so that anyone can use it to create their own customized Wasta-Linux ISO.\nIn order to create your own custom ISO, you can follow these steps:\n Install Wasta-Linux It is preferable to do this on a \u0026ldquo;clean test machine\u0026rdquo; designated for this process.\n Customize Wasta-Linux Follow either method listed on the Wasta-Linux customizing page.\n NOTE: Due to limitations of the ISO specification, there is a 4GB max size limitation on ISOs created with Wasta-Remastersys.  Copy all of your customizations to the \u0026ldquo;default user profile\u0026rdquo; In order to have the customizations you have made for the current user act as the defaults for new users, you need to copy the current user\u0026rsquo;s files to the \u0026ldquo;new user profile template folder\u0026rdquo; located at /etc/skel.\nTo copy all the configuration and settings you can use the wasta-remastersys-skelcopy Terminal * command. You need to provide the username that you want to serve as the basis for the \u0026ldquo;default user profile\u0026rdquo;:\n Terminal * command:\nsudo wasta-remastersys-skelcopy \u0026lt;username\u0026gt;   If you need additional items from a user\u0026rsquo;s home directory (such as training materials or other resources) copied to the default user profile folder, you will need to copy them manually.\nYou can confirm the default profile is set correctly by creating a new user onyour computer and then logging in as that new user. Everything should be correct (including all settings such as default user background, etc.). If not, you need to adjust the default user profile more and try again.\n Configure Wasta-Remastersys The Remastersys configuration settings are stored in the following file:\n/etc/wasta-remastersys/wasta-remastersys.conf  Notable things you may want to edit in this file include:\n LIVECDLABEL= Here you list the CD Label Name for the ISO. CUSTOMISO= This is the created ISO filename. INCLUDES= Here you can specify any additional folder you want to include in the remastered ISO. An example would be /home/data. If you included any files you want to distribute to all users in a \u0026lsquo;wasta-custom-xyz package\u0026rsquo;, this won\u0026rsquo;t be necessary.  Run Wasta-Remastersys Once you are ready, run this command from the Terminal * to start Wasta-Remastersys:\n Terminal command:\nsudo wasta-remastersys dist   Finished After the above command completes, your ISO (and a md5 checksum for it) will be ready in the /home/wasta-remastersys/wasta-remastersys folder. Install it on a USB drive and give it a test!\n  * To open the Terminal, in Wasta-Linux go to Menu \u0026gt; Administration \u0026gt; Terminal, or press the following keys at the same time: Ctrl + Alt + T\n"},{"idx":28,"href":"/hugo/wasta-apps/wasta-resources/","title":"Wasta-Resources","content":" Wasta-Resources: Centralized Distribution of Reference and Documentation Materials What is it? Basically Wasta-Resources is just a standard place in Wasta-Linux to put any read-only reference materials you want, and it also adds a launcher to open to the location in a file browser, so that this location is easy findable by users from the Main Menu.\nThe location is /usr/share/wasta-resources. Any package can place items here (We would recommend a sub-folder for your region).\nFor example, the SSG (Sudan group) Wasta-Resources package is called wasta-ssg-resources. It puts a folder called SSG Resources in /usr/share/wasta-resources. Inside this folder are keylists for the various SSG keyman keyboards.\nAnother example is the wasta-custom-eth package, which creates a symlink in the /usr/share/wasta-resources folder to /usr/share/doc/kmfl-keyboard-sil-ethiopic/readme.htm, so that again users can easily find the keyboard reference for this Keyman keyboard.\nIn both cases, Wasta-Resources simply provides a central location to place reference files for users. It is unlikely that normal users are going to find the /usr/share/doc/kmfl-keyboard-sil-ethiopic/readme.htm file otherwise!\nHow do I add materials to Wasta-Resources? For people wanting to distribute materials this way, it would require you to maintain packages in the Wasta-Linux software repository, which is documented as part of the Wasta-Linux customizing process.\nIt is really easy for us to initially set up the Wasta-Resources packages, so if you want to work with us offline to give us whatever materials you want to distribute to your users, we can create the firstwasta-xyz-resources package, after which any future modifications to this package will be made directly by you, the regional customizer. Follow this guide to maintain \u0026lsquo;wasta-custom-xyz\u0026rsquo; custom packages.\n"},{"idx":29,"href":"/hugo/home/why-linux/","title":"Why Linux?","content":"#Hello World\n"}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();